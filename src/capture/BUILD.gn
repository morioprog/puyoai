# TODO(mayah): Update ac_analyzer.cc not to use deprecated APIs.
# add_compile_options("-Wno-deprecated-declarations")

static_library("capture") {
    sources = [
        "ac_analyzer.cc",
        "ac_analyzer.h",
        "analyzer.cc",
        "analyzer.h",
        "analyzer_result_drawer.cc",
        "analyzer_result_drawer.h",
        "capture.cc",
        "capture.h",
        "color.cc",
        "color.h",
        "images_source.cc",
        "images_source.h",
        "movie_source.cc",
        "movie_source.h",
        "movie_source_key_listener.cc",
        "movie_source_key_listener.h",
        "real_color_field.cc",
        "real_color_field.h",
        "source.cc",
        "source.h",
        "usb_device.cc",
        "usb_device.h",
    ]

    cflags = [
        "-Wno-deprecated-declarations",
    ]

    deps = [
        "//src/core",
        "//third_party/gflags",
    ]
}

# if(V4L2_LIBRARY)
#     add_compile_options("-DUSE_V4L2")
#     add_library(puyoai_capture_viddev viddev_source.cc)
# endif()
# 
# if(LIB_USB)
#     add_library(puyoai_capture_syntek syntek_source.cc)
# endif()

# ----------------------------------------------------------------------

# function(capture_add_executable exe)
#     add_executable(${exe} ${exe}.cc)
#     if(LIB_USB)
#         target_link_libraries(${exe} puyoai_capture_syntek)
#         target_link_libraries(${exe} puyoai_capture_driver_syntek)
#     endif()
#     if(V4L2_LIBRARY)
#         target_link_libraries(${exe} puyoai_capture_viddev)
#     endif()
#     target_link_libraries(${exe} puyoai_capture)
#     target_link_libraries(${exe} puyoai_recognition)
#     target_link_libraries(${exe} puyoai_gui)
#     target_link_libraries(${exe} puyoai_learning)
#     target_link_libraries(${exe} puyoai_core)
#     target_link_libraries(${exe} puyoai_duel)
#     target_link_libraries(${exe} puyoai_base)
#     puyoai_target_link_libraries(${exe})
#     target_link_libraries(${exe} ${SDL2_LIBRARIES})
#     target_link_libraries(${exe} ${SDL2_TTF_LIBRARIES})
#     target_link_libraries(${exe} ${SDL2_IMAGE_LIBRARIES})
#     target_link_libraries(${exe} ${FFMPEG_LIBRARIES})
#     if(V4L2_LIBRARY)
#         target_link_libraries(${exe} ${V4L2_LIBRARY})
#     endif()
#     if(LIB_USB)
#         target_link_libraries(${exe} ${LIB_USB})
#     endif()
# endfunction()
# 
# capture_add_executable(convert_image_60fps)
# capture_add_executable(convert_movie_60fps)
# capture_add_executable(gather_images_by_match)
# capture_add_executable(split_image)
# capture_add_executable(split_movie)
# 
# capture_add_executable(parse_bmp)
# capture_add_executable(parse_box)
# # Disabled.
# #capture_add_executable(parse_imgs)
# capture_add_executable(parse_movie)
# if(LIB_USB)
#     capture_add_executable(parse_capture)
# endif()
# 
# # ----------------------------------------------------------------------
# 
# function(capture_add_test exe)
#     capture_add_executable(${exe})
#     target_link_libraries(${exe} gtest gtest_main)
#     add_test(check-${exe} ${exe})
# endfunction()
# 
# capture_add_test(ac_analyzer_test)
# capture_add_test(color_test)
# capture_add_test(real_color_field_test)
